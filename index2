<!DOCTYPE html>
<html>
<html lang="en">
<head>
  <title>Pokedex</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pokémon Voting</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f3f3f3;
      margin-top: 50px;
    body { font-family: 'Arial', sans-serif; text-align: center; background-color: #f0f8ff; color: #333; margin: 20px; }
    h1, h2 { color: #004d99; }
    .pokemon-container { display: flex; justify-content: center; margin-top: 20px; }
    .pokemon { margin: 20px; text-align: center; }
    .pokemon img { width: 150px; border: 3px solid #004d99; border-radius: 10px; }
    .pokemon button { 
      background-color: #4CAF50; 
      color: white; 
      border: none; 
      border-radius: 5px; 
      padding: 10px 20px; 
      font-size: 16px; 
      cursor: pointer; 
      transition: background-color 0.3s ease; 
    }
    .pokemon-container {
      display: inline-block;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 10px;
      box-shadow: 2px 2px 12px #aaa;
      background-color: #fff;
    }
    .pokemon-stats {
      text-align: left;
      margin: 10px auto;
    }
    .pokemon-stats li {
      list-style: none;
      padding: 5px;
      border-bottom: 1px solid #eee;
    }
    .pokemon-name {
      font-size: 24px;
      font-weight: bold;
    }
    .moveset {
      max-height: 150px;
      overflow-y: auto;
    }
    .pokemon-image {
      max-width: 150px;
      margin: 20px 0;
    .pokemon button:hover { 
      background-color: #45a049; 
    }
    table { margin: 20px auto; border-collapse: collapse; width: 80%; }
    th, td { border: 1px solid #ddd; padding: 8px; }
    th { background-color: #004d99; color: white; }
    tr:nth-child(even) { background-color: #f2f2f2; }
    tr:hover { background-color: #ddd; }
    .controls { margin-top: 20px; }
    .controls button { margin: 0 10px; }
  </style>
</head>
<body>
  <h1>Pokedex</h1>
  <input type="text" id="pokemonInput" placeholder="Enter Pokemon Name or ID">
  <button onclick="fetchPokemon()">Search</button>
  <div id="pokemonContainer" class="pokemon-container" style="display: none;">
    <h2 class="pokemon-name" id="pokemonName"></h2>
    <img id="pokemonImage" class="pokemon-image" src="" alt="Pokemon Image">
    <ul class="pokemon-stats" id="pokemonStats"></ul>
    <h3>Moveset</h3>
    <ul class="moveset" id="pokemonMoveset"></ul>
  <h1>Pokémon Voting</h1>
  <div class="pokemon-container">
    <div class="pokemon" id="pokemon1">
      <h2 id="pokemon1-name"></h2>
      <img id="pokemon1-img" src="" alt="" />
      <button onclick="vote('pokemon1')">Vote</button>
    </div>
    <div class="pokemon" id="pokemon2">
      <h2 id="pokemon2-name"></h2>
      <img id="pokemon2-img" src="" alt="" />
      <button onclick="vote('pokemon2')">Vote</button>
    </div>
  </div>
  <div class="controls">
    <button onclick="showMostVoted()">Show Most Voted</button>
    <button onclick="showLeastVoted()">Show Least Voted</button>
  </div>
  <h2>Voting Results</h2>
  <table>
    <thead>
      <tr>
        <th>Pokémon</th>
        <th>Votes</th>
        <th>Percentage</th>
      </tr>
    </thead>
    <tbody id="results-table"></tbody>
  </table>
  <script>
    async function fetchPokemon() {
      const pokemonInput = document.getElementById("pokemonInput").value.toLowerCase();
      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonInput}`);
      if (!response.ok) {
        alert("Pokemon not found!");
        return;
      }
      const pokemonData = await response.json();
      displayPokemon(pokemonData);
    let votes = JSON.parse(localStorage.getItem('votes')) || {};
    let totalVotes = JSON.parse(localStorage.getItem('totalVotes')) || 0;
    async function fetchRandomPokemon(id) {
      const randomId = Math.floor(Math.random() * 898) + 1; // Using first 898 Pokémon
      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${randomId}`);
      const pokemon = await response.json();
      document.getElementById(`${id}-name`).innerText = pokemon.name.toUpperCase();
      document.getElementById(`${id}-img`).src = pokemon.sprites.front_default;
      document.getElementById(id).dataset.name = pokemon.name;
    }

    function displayPokemon(pokemon) {
      const pokemonContainer = document.getElementById("pokemonContainer");
      const pokemonName = document.getElementById("pokemonName");
      const pokemonImage = document.getElementById("pokemonImage");
      const pokemonStats = document.getElementById("pokemonStats");
      const pokemonMoveset = document.getElementById("pokemonMoveset");
    async function displayRandomPokemons() {
      await Promise.all([fetchRandomPokemon('pokemon1'), fetchRandomPokemon('pokemon2')]);
    }

      pokemonContainer.style.display = "block";
      pokemonName.innerText = capitalizeFirstLetter(pokemon.name);
      pokemonImage.src = pokemon.sprites.front_default;
    function vote(pokemonId) {
      const pokemonName = document.getElementById(pokemonId).dataset.name;
      if (!votes[pokemonName]) {
        votes[pokemonName] = 0;
      }
      votes[pokemonName]++;
      totalVotes++;
      localStorage.setItem('votes', JSON.stringify(votes));
      localStorage.setItem('totalVotes', JSON.stringify(totalVotes));
      updateResultsTable();
      displayRandomPokemons();
    }

      pokemonStats.innerHTML = `
        <li>Height: ${pokemon.height}</li>
        <li>Weight: ${pokemon.weight}</li>
        <li>HP: ${pokemon.stats[0].base_stat}</li>
        <li>Attack: ${pokemon.stats[1].base_stat}</li>
        <li>Defense: ${pokemon.stats[2].base_stat}</li>
        <li>Special Attack: ${pokemon.stats[3].base_stat}</li>
        <li>Special Defense: ${pokemon.stats[4].base_stat}</li>
        <li>Speed: ${pokemon.stats[5].base_stat}</li>
        <li>Type: ${pokemon.types.map(type => capitalizeFirstLetter(type.type.name)).join(', ')}</li>
      `;
    function updateResultsTable() {
      const tableBody = document.getElementById('results-table');
      tableBody.innerHTML = '';
      for (const [pokemon, voteCount] of Object.entries(votes)) {
        const row = document.createElement('tr');
        const nameCell = document.createElement('td');
        nameCell.innerText = pokemon.toUpperCase();
        const votesCell = document.createElement('td');
        votesCell.innerText = voteCount;
        const percentageCell = document.createElement('td');
        percentageCell.innerText = ((voteCount / totalVotes) * 100).toFixed(2) + '%';
        row.appendChild(nameCell);
        row.appendChild(votesCell);
        row.appendChild(percentageCell);
        tableBody.appendChild(row);
      }
    }

      pokemonMoveset.innerHTML = pokemon.moves.map(move => `<li>${capitalizeFirstLetter(move.move.name)}</li>`).join('');
    function showMostVoted() {
      let maxVotes = 0;
      let maxPokemon = '';
      for (const [pokemon, voteCount] of Object.entries(votes)) {
        if (voteCount > maxVotes) {
          maxVotes = voteCount;
          maxPokemon = pokemon;
        }
      }
      alert(`Most voted Pokémon is ${maxPokemon.toUpperCase()} with ${maxVotes} votes!`);
    }

    function capitalizeFirstLetter(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    function showLeastVoted() {
      let minVotes = Infinity;
      let minPokemon = '';
      for (const [pokemon, voteCount] of Object.entries(votes)) {
        if (voteCount < minVotes) {
          minVotes = voteCount;
          minPokemon = pokemon;
        }
      }
      alert(`Least voted Pokémon is ${minPokemon.toUpperCase()} with ${minVotes} votes!`);
    }
    // Initialize with random Pokémon and update table
    displayRandomPokemons();
    updateResultsTable();
  </script>
</body>
</html>
